/*
 * File: js/app/view/FeatureWindow.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('App.view.FeatureWindow', {
    extend: 'Ext.window.Window',

    height: 351,
    id: 'featureWindow',
    width: 493,
    resizable: false,
    layout: {
        type: 'fit'
    },
    title: 'Редактирование характеристики',
    modal: true,

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'tabpanel',
                    border: 0,
                    bodyBorder: false,
                    activeTab: 0,
                    plain: true,
                    items: [
                        {
                            xtype: 'panel',
                            border: 0,
                            frame: false,
                            id: 'featureWindowTab0',
                            layout: {
                                type: 'fit'
                            },
                            bodyBorder: false,
                            title: 'Свойства',
                            items: [
                                {
                                    xtype: 'form',
                                    border: 0,
                                    disabled: false,
                                    frame: false,
                                    id: 'featureForm',
                                    bodyBorder: false,
                                    bodyPadding: 10,
                                    frameHeader: false,
                                    header: false,
                                    hideCollapseTool: false,
                                    title: 'My Form',
                                    method: 'post',
                                    url: 'http://dev2.prom-pc.ru/zadmin/index/save-feature',
                                    items: [
                                        {
                                            xtype: 'combobox',
                                            validator: function(value) {
                                                if(!value) return false;
                                                else return true;
                                            },
                                            anchor: '100%',
                                            id: 'groupField',
                                            name: 'group',
                                            fieldLabel: 'Группа',
                                            autoSelect: false,
                                            displayField: 'title',
                                            forceSelection: true,
                                            store: 'FeatureGroupsStore',
                                            valueField: 'id'
                                        },
                                        {
                                            xtype: 'textfield',
                                            validator: function(value) {
                                                if(!value) return false;
                                                else return true;
                                            },
                                            anchor: '100%',
                                            id: 'titleField',
                                            name: 'title',
                                            fieldLabel: 'Название'
                                        },
                                        {
                                            xtype: 'combobox',
                                            validator: function(value) {
                                                if(!value) return false;
                                                else return true;
                                            },
                                            anchor: '100%',
                                            id: 'typeField',
                                            name: 'type',
                                            fieldLabel: 'Тип',
                                            displayField: 'title',
                                            multiSelect: false,
                                            queryMode: 'local',
                                            store: 'FeatureTypesStore',
                                            valueField: 'type',
                                            listeners: {
                                                change: {
                                                    fn: me.onFeatureTypeChange,
                                                    scope: me
                                                }
                                            }
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            id: 'prefixField',
                                            name: 'prefix',
                                            fieldLabel: 'Префикс'
                                        },
                                        {
                                            xtype: 'textfield',
                                            anchor: '100%',
                                            id: 'suffixField',
                                            name: 'suffix',
                                            fieldLabel: 'Суффикс',
                                            size: 10
                                        },
                                        {
                                            xtype: 'hiddenfield',
                                            anchor: '100%',
                                            id: 'uidField',
                                            name: 'uid',
                                            fieldLabel: 'Label'
                                        },
                                        {
                                            xtype: 'hiddenfield',
                                            anchor: '100%',
                                            id: 'pidField',
                                            name: 'pid',
                                            fieldLabel: 'Label'
                                        },
                                        {
                                            xtype: 'hiddenfield',
                                            anchor: '100%',
                                            id: 'variantsField',
                                            name: 'variants',
                                            fieldLabel: 'Label'
                                        },
                                        {
                                            xtype: 'checkboxfield',
                                            anchor: '100%',
                                            id: 'visibleField',
                                            padding: '0 0 0 110',
                                            name: 'visible',
                                            fieldLabel: '',
                                            boxLabel: 'Показывать на странице товара',
                                            checked: true,
                                            inputValue: '1',
                                            uncheckedValue: '0'
                                        },
                                        {
                                            xtype: 'checkboxfield',
                                            anchor: '100%',
                                            id: 'createFilterField',
                                            padding: '0 0 0 110',
                                            name: 'create_filter',
                                            fieldLabel: '',
                                            boxLabel: 'Создать фильтр',
                                            inputValue: '1',
                                            uncheckedValue: '0'
                                        },
                                        {
                                            xtype: 'checkboxfield',
                                            anchor: '100%',
                                            id: 'forceFilterField',
                                            padding: '0 0 0 110',
                                            name: 'force_filter',
                                            fieldLabel: '',
                                            boxLabel: 'Выводить фильтр, даже если не все товары заполнены',
                                            inputValue: '1',
                                            uncheckedValue: '0'
                                        },
                                        {
                                            xtype: 'button',
                                            itemId: 'emptyProductsBtn',
                                            margin: '10 0 0 110',
                                            text: 'Незаполненные товары...'
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            xtype: 'panel',
                            border: 0,
                            frame: false,
                            hidden: false,
                            id: 'featureWindowTab1',
                            layout: {
                                type: 'fit'
                            },
                            bodyBorder: false,
                            collapsed: false,
                            header: false,
                            title: 'Варианты значений',
                            tabConfig: {
                                xtype: 'tab',
                                border: 0,
                                hidden: true
                            },
                            dockedItems: [
                                {
                                    xtype: 'toolbar',
                                    dock: 'bottom',
                                    items: [
                                        {
                                            xtype: 'button',
                                            text: 'Добавить',
                                            listeners: {
                                                click: {
                                                    fn: me.onButtonClick,
                                                    scope: me
                                                }
                                            }
                                        }
                                    ]
                                }
                            ],
                            items: [
                                {
                                    xtype: 'gridpanel',
                                    id: 'FeatureVariantsGrid',
                                    header: false,
                                    hideCollapseTool: false,
                                    title: 'My Grid Panel',
                                    columnLines: false,
                                    emptyText: 'Нет значений',
                                    forceFit: true,
                                    hideHeaders: true,
                                    store: 'FeatureVariantsStore',
                                    viewConfig: {
                                        emptyText: '< Нет значений >'
                                    },
                                    plugins: [
                                        Ext.create('Ext.grid.plugin.CellEditing', {
                                            ptype: 'cellediting',
                                            pluginId: 'cellediting',
                                            clicksToEdit: 1
                                        })
                                    ],
                                    columns: [
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'value',
                                            text: 'Value',
                                            editor: {
                                                xtype: 'textfield',
                                                allowBlank: false
                                            }
                                        },
                                        {
                                            xtype: 'gridcolumn',
                                            dataIndex: 'uid',
                                            text: 'Uid'
                                        }
                                    ],
                                    selModel: Ext.create('Ext.selection.CellModel', {

                                    })
                                }
                            ]
                        }
                    ]
                }
            ],
            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'bottom',
                    enableOverflow: false,
                    items: [
                        {
                            xtype: 'tbfill'
                        },
                        {
                            xtype: 'button',
                            floating: false,
                            frame: false,
                            text: 'Сохранить',
                            type: 'submit',
                            listeners: {
                                click: {
                                    fn: me.onSubmitButtonClick,
                                    scope: me
                                }
                            }
                        },
                        {
                            xtype: 'button',
                            text: 'Отмена',
                            type: 'reset',
                            listeners: {
                                click: {
                                    fn: me.onCancelButtonClick,
                                    scope: me
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onFeatureTypeChange: function(field, newValue, oldValue, options) {
        console.log(field);
        if(field.value == "multiselect" || field.value == "select") {
            Ext.getCmp("featureWindowTab1").tab.setVisible(true)
        }
        else {
            Ext.getCmp("featureWindowTab1").tab.setVisible(false)

        }
    },

    onButtonClick: function(button, e, options) {
        var variant = Ext.create("App.model.FeatureVariant");
        Ext.getStore("FeatureVariantsStore").insert(0, variant);
        Ext.getCmp("FeatureVariantsGrid").getPlugin('cellediting').startEditByPosition({row: 0, column: 0});
    },

    onSubmitButtonClick: function(button, e, options) {
        var variants = [];

        Ext.getCmp("FeatureVariantsGrid").store.data.items.forEach(function(item) {
            if(item.dirty) {
                variants.push(item.data);
            }
        });

        variants = Ext.JSON.encode(variants);
        var featureForm = Ext.getCmp("featureForm");
        featureForm.getForm().setValues({ variants: variants });

        featureForm.submit({
            success: function(form, action) {
            Ext.getStore("AllFeaturesTreeStore").reload(); },
            failure: function(form, action) {
                Ext.Msg.alert('Failure', 'Неизвестная ошибка при сохранении');
            }
        });
        button.up("window").destroy();

    },

    onCancelButtonClick: function(button, e, options) {
        button.up("window").destroy();
    }

});